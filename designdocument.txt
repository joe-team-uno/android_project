Joseph Janssen
Daniel Moore
Jed Oesterreich

Our application is a maze with a single ball. You click on the application to start it and hit the reset key to reset it.

Building and running modified kernel and test program:
    The kernel can be built simply by running the 'build-it' script in the Kernel directory. If not using the script, it is important to use an ARM build configuration, as the custom syscall is defined in  /arch/arm/kernel.

    The test program resides in the "TestPgm" directory, and is compiled individually. Cross-compile it with: 'arm-angstrom-linux-gnueabi-gcc -static -o TestPgm TestPgm.c'
    A pre-compiled executable is provided that will work with the modified kernel.

    Once compiled, boot the kernel either via emulator (recomended, this is how we tested it) or on a physical device. The test program can then be pushed onto the device and ran directly in command line mode.


1. the pid, first_child_pid, and next_sibling_pid fields change. the uid and comm don’t change. The pid’s change because there are different processes going on.


2. There were 5 processes destroyed when we closed the browser.


3.
a.) It is a process with core libraries linked in so when you start an application this process gets forked so the libraries can be shared.
b.) It is always part of the program.
c.) In an embedded system you have limited resources so you don’t want to create copies of multiple libraries that you will not change.
